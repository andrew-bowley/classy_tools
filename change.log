Classy Tools v1.12
1. Fix classyutils WorkerTask duplicate call to postResult()

Classy Tools v1.11

 1. Update to Android Support v22.2
 2. Remove spurious commit warning for nested transactions
 3. Update Two Dbs example QuoteSource to fix typo and add more quotes
 4. Add classyandroid BackgroundTask - a basic AsyncTaskLoader implementation
 5. Add start tracker to classyandroid SearchEngineBase
 6. Add unit tests for FtsQueryBuilder and SearchEngineBase and update AndroidTestSuite
 7. Move UriMatcher creation from ClassyFySearchEngine to SearchEngineBase
 8. Add CancellationSignal support to SearchEngineBase
 9. Removed doInBackground() from interface PersistenceWork which now extends PersistenceTask
10. Changed PersistenceTaskImpl to JavaPersistenceContext and cleaned up code
11. Removed InProcessPersistenceContainer and refactored OpenHelperCallbacksImpl to use JavaPersistenceContext
12. Added JavaPersistenceContext unit test
13. NodeFinder in classyjava changed to use a callback to handle task completion
14. Remove classyandroid CursorAdapterParameters and SearchCursorLoader
15. Add constructor to SuggestionCursorParameters with query text in place of bundle
16. Replace PropertiesListAdapter.Value with Parcelable ListItem

______________________________________________________________________________________________________________________
Classy Tools v1.0.10

1. Release built on Jenkins
2. Repo config error fixed on parent pom
______________________________________________________________________________________________________________________
Classy Tools v1.0.9

1. Maven Release configured for Jenkins implementation
2. Change log order reversed.
______________________________________________________________________________________________________________________
Classy Tools v1.0.8

Introduce Maven Release support, with snapshot versioning and SCM and Distribution Management activation.
Only releases will be pushed to Github in future.
______________________________________________________________________________________________________________________
Classy Tools v1.0.7

1. Fix Support Library v4 artfact in android-tests pom
2. Remove Lifecycle-mapping installation
3. Add H2DatabaseSupport and refactor common code into new base class
4. Sync TransactionState with OrmLite TransactionManager
5. Add H2 ManyToMany example
6. Factor out classyutils module to support eXPL install without OrmLite dependency
7. Download Ormlite jars using wget plugin
 
_______________________________________________________________________________________________________________________
Classy Tools v1.0.6

1. Update android.sdk.version to 5.1.1 (API 22)
2. Update android.support.version to 22.1.1
3. Added new "android-tests" module for Support Library tests
4. Revised support library artifacts to align with Android Support Libraries
5. Fixed Executable class in classyjava so returns FAIL status if not FINISHED
6. Fixed PersistenceLoader in classyandroid to return correct status on completion
_______________________________________________________________________________________________________________________
Classy Tools v1.0.5

1. Hello Two Dbs example minor revision to simplify it
2. Change PersistenceLoader so onPostExecute() runs on caller thread
3. Remove Eclipse generated project files from reposistory
4. Remove from poms dependencies which are no longer required
5. End "classic" Eclipse support by removing setup-eclipse install script files and profiles.  
6. Update Maven Android plugin version to 4.2.0
7. Reverse android.support.version to 21.0.1
8. Reverse android.platform.version to 21, android.sdk.version to 5.0.1_r2 

_______________________________________________________________________________________________________________________
Classy Tools v1.0.4

1. Update Robolectric to 3.0.rc-2 (some trivial code changes required and install additions)
2. Update android.sdk.version to 5.1.1 (API 22)
3. Update android.support.version to 22.0.0
4. Move Google Map API 18.3 dependency for Robolectric to "google-apis" profile for optional deployment.

_______________________________________________________________________________________________________________________
Classy Tools v1.0.3

1. Update included OrmLite library jars to pre-v1.49 release (03/15 build)
2. Enhance PersistenceContainer class to support synchronous operation.

Default is run persistence task in background thread but will now run in caller's thread
if new constructor "async" flag is set false or ConnectionSource with single connection detected  eg.
default OrmLite JdbcConnectionSource. The executeTask() return Executable object now has
waitForTask() method which should always be used for synchrous call to hide how
the PersistenceContainer is behaving.

3. Create new PersistenceContext class.

This is to hide PersistenceFactory dependency injection from all the classes dependent on it.
This solves annotation processing link error generated when compiling the ClassyFy Android app.
PersistenceContext has 2 methods to dynamically update the configuration of a persistence unit
to support database up/down-grade. See HelloTwoDbsUpgradeTest in hello-two-dbs-example project.

4. Create new PersistenceLoader class.

This replaces LoaderPersistenceContainer and LoaderTaskImpl in a refactor to take advantage
of PersistenceContainer's new synchronous cabability.

5. Fix bug in database upgrade code.

It was not updating database version except for version 0 to 1 upgrade.
_______________________________________________________________________________________________________________________
Classy Tools v1.0.2

1. Refactor database classes in classydb package to provide consistency between Java and Android database management. 

This increases support provided for ORMLite special connections used in Android onCreate and onUpgrade handling.

* OpenHelperCallbacks interface moved to classyjava project.
* Default OpenHelperCallbacks implementation changed from ClassyOpenHelperCallbacks to OpenHelperCallbacksImpl.
* OpenHelperCallbacksImpl is a JPA Persistence Container - runs in the same thread as caller, uses a provided ConnectionSource.
* DatabaseSupport interface increased with addition of database version accessors. 
* Detection of change of version triggers onCreate and onUpgrade events for non-Android databases.
* Added SQL script file(s) for datbase upgrades. A default naming convention applies which incorporates old and new version numbers. 
* DatabaseAdmin DATABASE_VERSION changed from "database_version" to "database-version"
* New DatabaseAdmin UPGRADE_FILENAME_FORMAT for custom upgrade file names
* OpenEventHandler is a new SQLiteOpenHelper implementation class which manages ORMLite special connections 
* DatabaseAdminImpl.initializeDatabase() now runs on same thread as caller.

2. New HelloTwoDbs project for Java implementation of Android counterpart.

* Unit test demonstrates datbase version upgrade case for two databases.

3. Change Robolectric version from 2.4-SNAPSHOT to 2.4

* Removed installation of SNAPSHOT files to local repository

4. Added configuration to Classy Tools pom.xml for reporting an aggregate JavaDocs site

* The site will be published at http://cybersearch2.com.au/apidocs/ so external links work for project JavaDocs.

5. WorkTracker in classytask package has new waitForTask() methods

* The waitForTask implementation transferred from DatabaseAdminImpl after refactor.
* Optional taskName added for timeout error reporting.

6. PersistenceFactory new initializeAllDatabases() method to be called on application start up

Note: initializeAllDatabases() method is sychronous and will propgate any RuntimeException thrown

* Provides a context in which database onCreate and onUpgrade events happen
* Existing test and sample code updated to call new method

_______________________________________________________________________________________________________________________
_______________________________________________________________________________________________________________________
